version: "3.1"

volumes:
  prometheus1_vol: {}
  prometheus2_vol: {}
  grafana_data: {}

services:
  prometheus1:
    image: prom/prometheus:v2.14.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus1_vol:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus1.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.max-block-duration=2h'
      - '--storage.tsdb.min-block-duration=2h'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9081:9090
    restart: always

  prometheus2:
    image: prom/prometheus:v2.14.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus2_vol:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus2.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.max-block-duration=2h'
      - '--storage.tsdb.min-block-duration=2h'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9082:9090
    restart: always

  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
    ports:
      - 9093:9093
    restart: always
    depends_on:
      - prometheus1
      - prometheus2

  node-exporter:
    image: prom/node-exporter:v0.18.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always

  sidecar1:
    image: quay.io/thanos/thanos:v0.8.1
    volumes:
      - ./thanos/:/etc/thanos/
      - prometheus1_vol:/prometheus
    command:
      - 'sidecar'
      - '--tsdb.path=/prometheus'
      - '--prometheus.url=http://prometheus1:9090'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10902'
    depends_on:
      - prometheus1
    restart: always

  sidecar2:
    image: quay.io/thanos/thanos:v0.8.1
    volumes:
      - ./thanos/:/etc/thanos/
      - prometheus2_vol:/prometheus
    command:
      - 'sidecar'
      - '--tsdb.path=/prometheus'
      - '--prometheus.url=http://prometheus2:9090'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10902'
    depends_on:
      - prometheus2
    restart: always
  
  querier:
    image: quay.io/thanos/thanos:v0.8.1
    command:
      - 'query'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10902'
      - '--query.replica-label=replica'
      - '--store=sidecar1:10091'
      - '--store=sidecar2:10091'
#      - '--store=thanos-store-gateway:10091'
    ports:
      - 10902:10902
    depends_on:
      - sidecar1
      - sidecar2
    restart: always

  grafana1:
    image: grafana/grafana:6.4.4
    user: "104"
    depends_on:
      - prometheus1
      - prometheus2
    ports:
      - 3001:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always

  grafana2:
    image: grafana/grafana:6.4.4
    user: "104"
    depends_on:
      - prometheus1
      - prometheus2
    ports:
      - 3002:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always

  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: grafanadbuser
      POSTGRES_PASSWORD: grafanadbpassword
      POSTGRES_DB: grafana
    restart: always

  adminer:
    image: adminer
    ports:
      - 8080:8080
    restart: always

  nginx:
    image: nginx
    ports:
      - 3000:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: always
    depends_on:
      - grafana1
      - grafana2

  influxdb:
    image: influxdb
    ports:
      - 8086:8086
      - 8083:8083
      - 8089:8089/udp
    volumes:
      - ./influxdb:/var/lib/influxdb
    environment:
      INFLUXDB_DB: influxdb_db
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: password
      NFLUXDB_ADMIN_ENABLED: "true"
    restart: always

  telegraf:
    image: telegraf
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    restart: always
    depends_on:
      - influxdb
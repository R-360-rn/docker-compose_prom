global:
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: 'localhost:25'
  smtp_from: 'alertmanager@example.org'

# The root route on which each incoming alert enters.
route:
  # The root route must not have any matchers as it is the entry point for
  # all alerts. It needs to have a receiver configured so alerts that do not
  # match any of the sub-routes are sent to someone.
  receiver: 'slack'

  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  group_by: ['alertname', 'cluster']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 30s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 5m

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 3h
  # All the above attributes are inherited by all child routes and can 
  # overwritten on each.


# Inhibition rules allow to mute a set of alerts given that another alert is
# firing.
# We use this to mute any warning-level notifications if the same alert is
# already critical.
inhibit_rules:
- source_match:
    severity: 'critical'
  target_match:
    severity: 'warning'
  # Apply inhibition if the alertname is the same.
  equal: ['alertname']


receivers:
  - 
    name: 'slack'
    slack_configs:
    # Whether or not to notify about resolved alerts.
    send_resolved: true
    # The Slack webhook URL.
    api_url: https://hooks.slack.com/services/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

    # The channel or user to send notifications to.
    channel: prom-graf-than
    # API request data as defined by the Slack webhook API.
    # username: <tmpl_string> | default = '{{ template "slack.default.username" . }}'
    # actions:
    #   [ <action_config> ... ]
    # [ callback_id: <tmpl_string> | default = '{{ template "slack.default.callbackid" . }}' ]
    # [ color: <tmpl_string> | default = '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}' ]
    # [ fallback: <tmpl_string> | default = '{{ template "slack.default.fallback" . }}' ]
    # fields:
    #   [ <field_config> ... ]
    # [ footer: <tmpl_string> | default = '{{ template "slack.default.footer" . }}' ]
    # [ pretext: <tmpl_string> | default = '{{ template "slack.default.pretext" . }}' ]
    # [ short_fields: <boolean> | default = false ]
    # [ text: <tmpl_string> | default = '{{ template "slack.default.text" . }}' ]
    # [ title: <tmpl_string> | default = '{{ template "slack.default.title" . }}' ]
    # [ title_link: <tmpl_string> | default = '{{ template "slack.default.titlelink" . }}' ]
    # [ image_url: <tmpl_string> ]
    # [ thumb_url: <tmpl_string> ]

    # # The HTTP client's configuration.
    # [ http_config: <http_config> | default = global.http_config ]


global:
  slack_api_url: 'https://hooks.slack.com/services/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'

route:
  receiver: 'slack-notifications'
  group_by: [alertname, cluster]

receivers:
- name: 'slack-notifications'
  slack_configs:
  - channel: '#prom-graf-than'
    text: 'https://internal.myorg.net/wiki/alerts/{{ .GroupLabels.app }}/{{ .GroupLabels.alertname }}'